{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n/* eslint-disable react/no-unused-state */\n\nimport { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Region from 'region';\nimport DragHelper from 'drag-helper';\nimport toStringValue from './toStringValue';\nexport var baseInitialState = {\n  top: 0,\n  left: 0,\n  mouseDown: null,\n  value: null\n};\nexport var basePropTypes = {\n  inPicker: PropTypes.bool,\n  value: PropTypes.any,\n  onMouseDown: PropTypes.func,\n  onDrag: PropTypes.func,\n  onChange: PropTypes.func\n};\nexport var baseDefaultProps = {\n  inPicker: false,\n  value: null,\n  onMouseDown: null,\n  onDrag: null,\n  onChange: null\n};\n\nvar getEventInfo = function getEventInfo(event, region) {\n  var x = event.clientX - region.left;\n  var y = event.clientY - region.top;\n  return {\n    x: x,\n    y: y,\n    width: region.getWidth(),\n    height: region.getHeight()\n  };\n};\n\nvar BaseComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BaseComponent, _Component);\n\n  function BaseComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BaseComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BaseComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", baseInitialState);\n\n    _defineProperty(_assertThisInitialized(_this), \"rootRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDragStart\", Function.prototype);\n\n    _defineProperty(_assertThisInitialized(_this), \"onMouseDown\", function (event) {\n      event.preventDefault();\n\n      var region = _this.getDOMRegion();\n\n      var info = getEventInfo(event, region);\n      DragHelper(event, {\n        scope: _assertThisInitialized(_this),\n        constrainTo: region,\n\n        /* eslint-disable no-param-reassign */\n        onDragStart: function onDragStart(dragStartEvent, config) {\n          config.initialPoint = info;\n          config.minLeft = 0;\n          config.maxLeft = region.width;\n          this.handleDragStart(dragStartEvent);\n        },\n\n        /* eslint-enable no-param-reassign */\n        onDrag: function onDrag(dragEvent, config) {\n          var dragInfo = getEventInfo(dragEvent, region);\n          var newHsv = this.updateColor(dragInfo);\n          this.handleDrag(dragEvent, config, newHsv);\n        },\n        onDrop: function onDrop(dropEvent, config) {\n          var dropInfo = getEventInfo(dropEvent, region);\n          var newHsv = this.updateColor(dropInfo);\n          this.handleDrop(dropEvent, config, newHsv);\n        }\n      });\n\n      _this.updateColor(info);\n\n      _this.handleMouseDown(event, {\n        initialPoint: info\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseDown\", function (event, config) {\n      var onMouseDown = _this.props.onMouseDown;\n\n      if (onMouseDown) {\n        onMouseDown.apply(_assertThisInitialized(_this), _this.getColors(_this.hsv));\n      }\n\n      _this.handleDrag(event, config, _this.hsv);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUpdate\", function (event, config) {\n      var _this$props = _this.props,\n          inPicker = _this$props.inPicker,\n          value = _this$props.value;\n      var diff = config.diff || {\n        top: 0,\n        left: 0\n      };\n      var initialPoint = config.initialPoint;\n\n      if (initialPoint) {\n        var left;\n        left = initialPoint.x + diff.left;\n        var top = initialPoint.y + diff.top;\n        left = Math.max(left, config.minLeft);\n        left = Math.min(left, config.maxLeft);\n\n        _this.setState({\n          top: top,\n          left: left,\n          mouseDown: {\n            x: left,\n            y: top,\n            width: initialPoint.width,\n            height: initialPoint.height\n          }\n        });\n      }\n\n      if (inPicker) {\n        // the picker handles the values\n        return;\n      }\n\n      if (!value) {\n        _this.setState({\n          // eslint-disable-next-line react/no-unused-state\n          value: _this.hsv\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(BaseComponent, [{\n    key: \"getDOMRegion\",\n    value: function getDOMRegion() {\n      return Region.fromDOM(this.rootRef.current);\n    }\n  }, {\n    key: \"getColors\",\n    value: function getColors(hsv) {\n      var inPicker = this.props.inPicker;\n      var first = inPicker ? hsv : toStringValue(hsv);\n      var args = [first];\n\n      if (!inPicker) {\n        args.push(_objectSpread({}, hsv));\n      }\n\n      return args;\n    }\n  }, {\n    key: \"handleDrag\",\n    value: function handleDrag(event, config, hsv) {\n      var onDrag = this.props.onDrag;\n      this.handleUpdate(event, config);\n\n      if (onDrag) {\n        onDrag.apply(this, this.getColors(hsv));\n      }\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(event, config, hsv) {\n      var onChange = this.props.onChange;\n      this.handleUpdate(event, config);\n      this.setState({\n        mouseDown: false\n      });\n\n      if (onChange) {\n        onChange.apply(this, this.getColors(hsv));\n      }\n    }\n  }]);\n\n  return BaseComponent;\n}(Component);\n\n_defineProperty(BaseComponent, \"propTypes\", basePropTypes);\n\n_defineProperty(BaseComponent, \"defaultProps\", baseDefaultProps);\n\nexport default BaseComponent;","map":null,"metadata":{},"sourceType":"module"}