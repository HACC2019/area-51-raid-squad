{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/* eslint react/prop-types: 0 */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _context = require('./context');\n\nvar _editingCell = require('./editing-cell');\n\nvar _editingCell2 = _interopRequireDefault(_editingCell);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = function (_, onStartEdit) {\n  var EditingCell = (0, _editingCell2.default)(_, onStartEdit);\n\n  var renderWithEditingCell = function renderWithEditingCell(props, cellEdit) {\n    var content = _.get(props.row, props.column.dataField);\n\n    var editCellstyle = props.column.editCellStyle || {};\n    var editCellclasses = props.column.editCellClasses;\n\n    if (_.isFunction(props.column.editCellStyle)) {\n      editCellstyle = props.column.editCellStyle(content, props.row, props.rowIndex, props.columnIndex);\n    }\n\n    if (_.isFunction(props.column.editCellClasses)) {\n      editCellclasses = props.column.editCellClasses(content, props.row, props.rowIndex, props.columnIndex);\n    }\n\n    return _react2.default.createElement(EditingCell, _extends({}, props, {\n      className: editCellclasses,\n      style: editCellstyle\n    }, cellEdit));\n  };\n\n  return function (props) {\n    return _react2.default.createElement(_context.Consumer, null, function (cellEdit) {\n      return renderWithEditingCell(props, cellEdit);\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"script"}