{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseComponent, { baseInitialState, basePropTypes, baseDefaultProps } from './utils/common';\nimport DEFAULT_COLOR from './defaultColor';\nimport VALIDATE from './utils/validate';\nimport toColorValue from './utils/toColorValue';\n\nvar HueSpectrum =\n/*#__PURE__*/\nfunction (_BaseComponent) {\n  _inherits(HueSpectrum, _BaseComponent);\n\n  function HueSpectrum() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HueSpectrum);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HueSpectrum)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, baseInitialState, {\n      h: 0\n    }));\n\n    return _this;\n  }\n\n  _createClass(HueSpectrum, [{\n    key: \"isComponentMounted\",\n    value: function isComponentMounted() {\n      return this.mounted;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n      this.updateDragPositionIf();\n    }\n  }, {\n    key: \"updateDragPositionIf\",\n    value: function updateDragPositionIf() {\n      if (!this.props.height) {\n        this.setState({});\n      }\n    }\n  }, {\n    key: \"getDragPosition\",\n    value: function getDragPosition() {\n      var _this$props = this.props,\n          height = _this$props.height,\n          pointerSize = _this$props.pointerSize;\n\n      if (!height && !this.isComponentMounted()) {\n        return null;\n      }\n\n      var computedHeight = height || this.getDOMRegion().getHeight();\n      var size = pointerSize;\n      var pos = Math.round(this.hsv.h * computedHeight / 360);\n      var diff = Math.round(size / 2);\n      return pos - diff;\n    }\n  }, {\n    key: \"updateColor\",\n    value: function updateColor(point) {\n      var newPoint = VALIDATE(point);\n      this.hsv.h = newPoint.y * 360 / newPoint.height;\n\n      var newHsv = _objectSpread({}, this.hsv);\n\n      var newH;\n\n      if (this.hsv.h !== 0) {\n        newH = this.hsv.h;\n      }\n\n      newH = this.hsv.h !== 0 ? this.hsv.h : 0;\n      this.setState({\n        h: newH\n      });\n      this.hsv = newHsv;\n      return newHsv;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          value = _this$props2.value,\n          defaultValue = _this$props2.defaultValue,\n          defaultColor = _this$props2.defaultColor,\n          pointerSize = _this$props2.pointerSize,\n          height = _this$props2.height,\n          width = _this$props2.width;\n      var _this$state = this.state,\n          stateValue = _this$state.value,\n          h = _this$state.h;\n      this.hsv = toColorValue(stateValue || value || defaultValue || defaultColor);\n\n      if (h === 360 && !this.hsv.h) {\n        // in order to show bottom red as well on drag\n        this.hsv.h = 360;\n      }\n\n      var rootStyle = _objectSpread({}, style);\n\n      if (height) {\n        rootStyle.height = height;\n      }\n\n      if (width) {\n        rootStyle.width = width;\n      }\n\n      var dragStyle = {\n        height: pointerSize\n      };\n      var dragPos = this.getDragPosition();\n\n      if (dragPos !== null) {\n        dragStyle.top = dragPos;\n        dragStyle.display = 'block';\n      }\n\n      return React.createElement(\"div\", {\n        className: \"react-color-picker__hue-spectrum\",\n        style: rootStyle,\n        onMouseDown: this.onMouseDown,\n        role: \"button\",\n        ref: this.rootRef,\n        tabIndex: 0\n      }, React.createElement(\"div\", {\n        className: \"react-color-picker__hue-drag\",\n        style: dragStyle\n      }, React.createElement(\"div\", {\n        className: \"react-color-picker__hue-inner\"\n      })));\n    }\n  }]);\n\n  return HueSpectrum;\n}(BaseComponent);\n\n_defineProperty(HueSpectrum, \"propTypes\", _objectSpread({}, basePropTypes, {\n  height: PropTypes.number,\n  width: PropTypes.number,\n  pointerSize: PropTypes.number,\n  defaultColor: PropTypes.any,\n  isHueSpectrum: PropTypes.bool\n}));\n\n_defineProperty(HueSpectrum, \"defaultProps\", _objectSpread({}, baseDefaultProps, {\n  height: 300,\n  width: 30,\n  pointerSize: 3,\n  defaultColor: DEFAULT_COLOR,\n  isHueSpectrum: true\n}));\n\nexport default HueSpectrum;","map":null,"metadata":{},"sourceType":"module"}