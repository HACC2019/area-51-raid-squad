{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anime\\\\Documents\\\\Githubrepositories\\\\area-51-raid-squad\\\\src\\\\containers\\\\MainContent\\\\form\\\\form-validation.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, CardBody, Button } from 'reactstrap';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { activateAuthLayout } from '../../../store/actions';\nimport { connect } from 'react-redux';\nimport Settingmenu from '../Subpages/Settingmenu';\nimport { Link } from 'react-router-dom';\n\nclass FormValidation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.add_bClass = () => {\n      document.getElementById('bootstrap_validation').classList.add('was-validated');\n    };\n\n    this.add_vClass = () => {\n      document.getElementById('b_validation').classList.add('was-validated');\n    };\n\n    this.state = {};\n    this.add_bClass = this.add_bClass.bind(this);\n    this.add_vClass = this.add_vClass.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.activateAuthLayout();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page-title-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Form Validation\"), React.createElement(\"ol\", {\n      className: \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"mdi mdi-home-outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))), React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Forms\")), React.createElement(\"li\", {\n      className: \"breadcrumb-item active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Form Validation\"))), React.createElement(Col, {\n      sm: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-right d-none d-md-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Settingmenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"mt-0 header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Bootstrap Validation - Normal\"), React.createElement(\"p\", {\n      className: \"text-muted mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Provide valuable, actionable feedback to your users with HTML5 form validation\\u2013available in all our supported browsers.\"), React.createElement(\"form\", {\n      className: \"needs-validation\",\n      id: \"bootstrap_validation\",\n      novalidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"validationCustom01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"First name\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"validationCustom01\",\n      placeholder: \"First name\",\n      value: \"Mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"valid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Looks good!\"))), React.createElement(Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"validationCustom02\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Last name\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"validationCustom02\",\n      placeholder: \"Last name\",\n      value: \"Otto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"valid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Looks good!\")))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"validationCustom03\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"validationCustom03\",\n      placeholder: \"City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Please provide a valid city.\"))), React.createElement(Col, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"validationCustom04\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"State\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"validationCustom04\",\n      placeholder: \"State\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Please provide a valid state.\"))), React.createElement(Col, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"validationCustom05\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Zip\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"validationCustom05\",\n      placeholder: \"Zip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Please provide a valid zip.\")))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"invalidCheck\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      for: \"invalidCheck\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Agree to terms and conditions\"), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"You must agree before submitting.\"))))), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.add_bClass,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Submit form\"))))), React.createElement(Col, {\n      lg: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"mt-0 header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Bootstrap Validation (Tooltips)\"), React.createElement(\"p\", {\n      className: \"text-muted mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"If your form layout allows it, you can swap the \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \".valid|invalid-feedback\"), \" classNamees for \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \".valid|invalid-tooltip\"), \" classNamees to display validation feedback in a styled tooltip.\"), React.createElement(\"form\", {\n      className: \"needs-validation\",\n      id: \"b_validation\",\n      novalidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group position-relative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"validationTooltip01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"First name\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"validationTooltip01\",\n      placeholder: \"First name\",\n      value: \"Mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"valid-tooltip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Looks good!\"))), React.createElement(Col, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group position-relative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"validationTooltip02\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Last name\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"validationTooltip02\",\n      placeholder: \"Last name\",\n      value: \"Otto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"valid-tooltip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Looks good!\"))), React.createElement(Col, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group position-relative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"validationTooltipUsername\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      id: \"validationTooltipUsernamePrepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"@\")), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"validationTooltipUsername\",\n      placeholder: \"Username\",\n      \"aria-describedby\": \"validationTooltipUsernamePrepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-tooltip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Please choose a unique and valid username.\"))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group position-relative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"validationTooltip03\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"validationTooltip03\",\n      placeholder: \"City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-tooltip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Please provide a valid city.\"))), React.createElement(Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group position-relative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"validationTooltip04\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"State\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"validationTooltip04\",\n      placeholder: \"State\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-tooltip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Please provide a valid state.\")))), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.add_vClass,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Submit form\")))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"mt-0 header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Validation Type\"), React.createElement(\"p\", {\n      className: \"text-muted mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Parsley is a javascript form validation library. It helps you provide your users with feedback on their form submission before sending it to your server.\"), React.createElement(AvForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(AvField, {\n      name: \"username\",\n      label: \"Required : \",\n      placeholder: \"Type Something\",\n      type: \"text\",\n      errorMessage: \"Enter Name\",\n      validate: {\n        required: {\n          value: true\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Equal To\"), React.createElement(AvField, {\n      name: \"password\",\n      type: \"text\",\n      placeholder: \"Password\",\n      errorMessage: \"Enter password\",\n      validate: {\n        required: {\n          value: true\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"password1\",\n      type: \"text\",\n      placeholder: \"Re-type Password\",\n      errorMessage: \"Enter Re-password\",\n      validate: {\n        required: {\n          value: true\n        },\n        match: {\n          value: 'password'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"email\",\n      label: \"E-Mail : \",\n      placeholder: \"Enter Valid Email\",\n      type: \"email\",\n      errorMessage: \"Invalid Email\",\n      validate: {\n        required: {\n          value: true\n        },\n        email: {\n          value: true\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"digits\",\n      label: \"Digits : \",\n      placeholder: \"Enter Only Digits\",\n      type: \"number\",\n      errorMessage: \"Enter Only Digits\",\n      validate: {\n        required: {\n          value: true\n        },\n        pattern: {\n          value: '^[0-9]+$',\n          errorMessage: 'Only Digits'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"number\",\n      label: \"Number : \",\n      placeholder: \"Enter Only number\",\n      type: \"number\",\n      errorMessage: \"Enter Only Number\",\n      validate: {\n        required: {\n          value: true\n        },\n        pattern: {\n          value: '^[0-9]+$',\n          errorMessage: 'Only Numbers'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"alphanumeric\",\n      label: \"Alphanumeric : \",\n      placeholder: \"Enter Only alphanumeric value\",\n      type: \"text\",\n      errorMessage: \"Enter Only Alphanumeric\",\n      validate: {\n        required: {\n          value: true\n        },\n        pattern: {\n          value: '^[0-9a-zA-Z]+$',\n          errorMessage: 'Only Alphanumeric'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group  m-b-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Submit\"), \"  \\xA0\", React.createElement(Button, {\n      type: \"reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"cancel\")))))), React.createElement(Col, {\n      lg: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"mt-0 header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Range Validation\"), React.createElement(\"p\", {\n      className: \"text-muted mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Parsley is a javascript form validation library. It helps you provide your users with feedback on their form submission before sending it to your server.\"), React.createElement(AvForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(AvField, {\n      name: \"Min_Length\",\n      label: \"Min Length : \",\n      placeholder: \"Min 6 chars\",\n      type: \"number\",\n      errorMessage: \"Min 6 chars.\",\n      validate: {\n        required: {\n          value: true\n        },\n        minLength: {\n          value: 6,\n          errorMessage: 'Min 6 chars.'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"Max_Length\",\n      label: \"Max Length : \",\n      placeholder: \"Max 6 chars\",\n      type: \"number\",\n      errorMessage: \"Max 6 chars.\",\n      validate: {\n        required: {\n          value: true\n        },\n        maxLength: {\n          value: 6,\n          errorMessage: 'Max 6 chars.'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"Min_Value\",\n      label: \"Min Value : \",\n      placeholder: \"Min 6 Chars\",\n      min: 6,\n      type: \"number\",\n      errorMessage: \"Min Value 6\",\n      validate: {\n        required: {\n          value: true\n        },\n        min: {\n          value: 6\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"Max_Value\",\n      label: \"Max Value : \",\n      placeholder: \"max 5 Chars\",\n      max: 6,\n      type: \"number\",\n      errorMessage: \"Max Value 6\",\n      validate: {\n        required: {\n          value: true\n        },\n        max: {\n          value: 6\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"Range_Value\",\n      label: \"Range Length : \",\n      placeholder: \"Text between 5 - 10 chars length\",\n      type: \"number\",\n      errorMessage: \"range between 5 to 10\",\n      validate: {\n        required: {\n          value: true\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"Regular_Exp\",\n      label: \"Regular Exp : \",\n      placeholder: \"Hex. Color\",\n      type: \"number\",\n      errorMessage: \"Hex Value\",\n      validate: {\n        required: {\n          value: true\n        },\n        pattern: {\n          value: '^[#0-9]+$',\n          errorMessage: 'Only Hex Value'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group  m-b-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Submit\"), \"  \\xA0\", React.createElement(Button, {\n      type: \"reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"cancel\"))))))))));\n  }\n\n}\n\nexport default connect(null, {\n  activateAuthLayout\n})(FormValidation);","map":{"version":3,"sources":["C:/Users/Anime/Documents/Githubrepositories/area-51-raid-squad/src/containers/MainContent/form/form-validation.js"],"names":["React","Component","Row","Col","Card","CardBody","Button","AvForm","AvField","activateAuthLayout","connect","Settingmenu","Link","FormValidation","constructor","props","add_bClass","document","getElementById","classList","add","add_vClass","state","bind","componentDidMount","render","required","value","match","email","pattern","errorMessage","minLength","maxLength","min","max"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Card, CardBody, Button } from 'reactstrap';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport { activateAuthLayout } from '../../../store/actions';\r\nimport { connect } from 'react-redux';\r\nimport Settingmenu from '../Subpages/Settingmenu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FormValidation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n        this.add_bClass = this.add_bClass.bind(this);\r\n        this.add_vClass = this.add_vClass.bind(this);\r\n    }\r\n    add_bClass = () => {\r\n        document.getElementById('bootstrap_validation').classList.add('was-validated');\r\n    }\r\n    add_vClass = () => {\r\n        document.getElementById('b_validation').classList.add('was-validated');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.activateAuthLayout();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"page-title-box\">\r\n                            <Row className=\"align-items-center\">\r\n                                <Col sm=\"6\">\r\n                                    <h4 className=\"page-title\">Form Validation</h4>\r\n                                    <ol className=\"breadcrumb\">\r\n                                        <li className=\"breadcrumb-item\"><Link to=\"#\"><i className=\"mdi mdi-home-outline\"></i></Link></li>\r\n                                        <li className=\"breadcrumb-item\"><Link to=\"#\">Forms</Link></li>\r\n                                        <li className=\"breadcrumb-item active\">Form Validation</li>\r\n                                    </ol>\r\n                                </Col>\r\n                                <Col sm=\"6\">\r\n                                    <div className=\"float-right d-none d-md-block\">\r\n                                        <Settingmenu />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n\r\n                        <Row>\r\n                            <Col lg=\"6\">\r\n                                <Card>\r\n                                    <CardBody>\r\n                                        <h4 className=\"mt-0 header-title\">Bootstrap Validation - Normal</h4>\r\n                                        <p className=\"text-muted mb-4\">Provide valuable, actionable feedback to your users with HTML5 form validation–available in all our supported browsers.</p>\r\n                                        <form className=\"needs-validation\" id=\"bootstrap_validation\" novalidate>\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label for=\"validationCustom01\">First name</label>\r\n                                                        <input type=\"text\" className=\"form-control\" id=\"validationCustom01\" placeholder=\"First name\" value=\"Mark\" />\r\n                                                        <div className=\"valid-feedback\">\r\n                                                            Looks good!\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col md=\"6\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label for=\"validationCustom02\">Last name</label>\r\n                                                        <input type=\"text\" className=\"form-control\" id=\"validationCustom02\" placeholder=\"Last name\" value=\"Otto\" />\r\n                                                        <div className=\"valid-feedback\">\r\n                                                            Looks good!\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col md=\"4\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label for=\"validationCustom03\">City</label>\r\n                                                        <input type=\"text\" className=\"form-control\" id=\"validationCustom03\" placeholder=\"City\" />\r\n                                                        <div className=\"invalid-feedback\">\r\n                                                            Please provide a valid city.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col md=\"4\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label for=\"validationCustom04\">State</label>\r\n                                                        <input type=\"text\" className=\"form-control\" id=\"validationCustom04\" placeholder=\"State\" />\r\n                                                        <div className=\"invalid-feedback\">\r\n                                                            Please provide a valid state.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col md=\"4\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label for=\"validationCustom05\">Zip</label>\r\n                                                        <input type=\"text\" className=\"form-control\" id=\"validationCustom05\" placeholder=\"Zip\" />\r\n                                                        <div className=\"invalid-feedback\">\r\n                                                            Please provide a valid zip.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col lg=\"12\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"custom-control custom-checkbox\">\r\n                                                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"invalidCheck\" />\r\n                                                            <label className=\"custom-control-label\" for=\"invalidCheck\">Agree to terms and conditions</label>\r\n                                                            <div className=\"invalid-feedback\">\r\n                                                                You must agree before submitting.\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <button className=\"btn btn-primary\" onClick={this.add_bClass} type=\"button\">Submit form</button>\r\n                                        </form>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                            <Col lg=\"6\">\r\n                                <Card>\r\n                                    <CardBody>\r\n                                        <h4 className=\"mt-0 header-title\">Bootstrap Validation (Tooltips)</h4>\r\n                                        <p className=\"text-muted mb-4\">If your form layout allows it, you can swap the <code>.valid|invalid-feedback</code> classNamees for <code>.valid|invalid-tooltip</code> classNamees to display validation feedback in a styled tooltip.</p>\r\n                                        <form className=\"needs-validation\" id=\"b_validation\" novalidate>\r\n                                            <Row>\r\n                                                <Col md=\"4\">\r\n                                                    <div className=\"form-group position-relative\">\r\n                                                        <label for=\"validationTooltip01\">First name</label>\r\n                                                        <input type=\"text\" className=\"form-control\" id=\"validationTooltip01\" placeholder=\"First name\" value=\"Mark\" />\r\n                                                        <div className=\"valid-tooltip\">\r\n                                                            Looks good!\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col md=\"4\">\r\n                                                    <div className=\"form-group position-relative\">\r\n                                                        <label for=\"validationTooltip02\">Last name</label>\r\n                                                        <input type=\"text\" className=\"form-control\" id=\"validationTooltip02\" placeholder=\"Last name\" value=\"Otto\" />\r\n                                                        <div className=\"valid-tooltip\">\r\n                                                            Looks good!\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col md=\"4\">\r\n                                                    <div className=\"form-group position-relative\">\r\n                                                        <label for=\"validationTooltipUsername\">Username</label>\r\n                                                        <div className=\"input-group\">\r\n                                                            <div className=\"input-group-prepend\">\r\n                                                                <span className=\"input-group-text\" id=\"validationTooltipUsernamePrepend\">@</span>\r\n                                                            </div>\r\n                                                            <input type=\"text\" className=\"form-control\" id=\"validationTooltipUsername\" placeholder=\"Username\" aria-describedby=\"validationTooltipUsernamePrepend\" />\r\n                                                            <div className=\"invalid-tooltip\">\r\n                                                                Please choose a unique and valid username.\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    <div className=\"form-group position-relative\">\r\n                                                        <label for=\"validationTooltip03\">City</label>\r\n                                                        <input type=\"text\" className=\"form-control\" id=\"validationTooltip03\" placeholder=\"City\" />\r\n                                                        <div className=\"invalid-tooltip\">\r\n                                                            Please provide a valid city.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col md=\"6\">\r\n                                                    <div className=\"form-group position-relative\">\r\n                                                        <label for=\"validationTooltip04\">State</label>\r\n                                                        <input type=\"text\" className=\"form-control\" id=\"validationTooltip04\" placeholder=\"State\" />\r\n                                                        <div className=\"invalid-tooltip\">\r\n                                                            Please provide a valid state.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <button className=\"btn btn-primary\" onClick={this.add_vClass} type=\"button\">Submit form</button>\r\n                                        </form>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col lg=\"6\">\r\n                                <Card>\r\n                                    <CardBody>\r\n\r\n                                        <h4 className=\"mt-0 header-title\">Validation Type</h4>\r\n                                        <p className=\"text-muted mb-4\">Parsley is a javascript form validation\r\n                                            library. It helps you provide your users with feedback on their form\r\n                                            submission before sending it to your server.</p>\r\n                                        <AvForm>\r\n                                            <AvField name=\"username\" label=\"Required : \" placeholder=\"Type Something\" type=\"text\" errorMessage=\"Enter Name\" validate={{ required: { value: true } }} />\r\n                                            <label>Equal To</label>\r\n                                            <AvField name=\"password\" type=\"text\" placeholder=\"Password\" errorMessage=\"Enter password\" validate={{ required: { value: true } }} />\r\n                                            <AvField name=\"password1\" type=\"text\" placeholder=\"Re-type Password\" errorMessage=\"Enter Re-password\" validate={{ required: { value: true }, match: { value: 'password' } }} />\r\n                                            <AvField name=\"email\" label=\"E-Mail : \" placeholder=\"Enter Valid Email\" type=\"email\" errorMessage=\"Invalid Email\" validate={{ required: { value: true }, email: { value: true } }} />\r\n                                            <AvField name=\"digits\" label=\"Digits : \" placeholder=\"Enter Only Digits\" type=\"number\" errorMessage=\"Enter Only Digits\" validate={{ required: { value: true }, pattern: { value: '^[0-9]+$', errorMessage: 'Only Digits' } }} />\r\n                                            <AvField name=\"number\" label=\"Number : \" placeholder=\"Enter Only number\" type=\"number\" errorMessage=\"Enter Only Number\" validate={{ required: { value: true }, pattern: { value: '^[0-9]+$', errorMessage: 'Only Numbers' } }} />\r\n                                            <AvField name=\"alphanumeric\" label=\"Alphanumeric : \" placeholder=\"Enter Only alphanumeric value\" type=\"text\" errorMessage=\"Enter Only Alphanumeric\" validate={{ required: { value: true }, pattern: { value: '^[0-9a-zA-Z]+$', errorMessage: 'Only Alphanumeric' } }} />\r\n                                            <div className=\"form-group  m-b-0\">\r\n                                                <Button color=\"primary\">Submit</Button>  &nbsp;\r\n                                            <Button type=\"reset\">cancel</Button>\r\n                                            </div>\r\n                                        </AvForm>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                            <Col lg=\"6\">\r\n                                <Card>\r\n                                    <CardBody>\r\n                                        <h4 className=\"mt-0 header-title\">Range Validation</h4>\r\n                                        <p className=\"text-muted mb-4\">Parsley is a javascript form validation\r\n                                            library. It helps you provide your users with feedback on their form\r\n                                            submission before sending it to your server.</p>\r\n                                        <AvForm>\r\n                                            <AvField name=\"Min_Length\" label=\"Min Length : \" placeholder=\"Min 6 chars\" type=\"number\" errorMessage=\"Min 6 chars.\" validate={{ required: { value: true }, minLength: { value: 6, errorMessage: 'Min 6 chars.' } }} />\r\n                                            <AvField name=\"Max_Length\" label=\"Max Length : \" placeholder=\"Max 6 chars\" type=\"number\" errorMessage=\"Max 6 chars.\" validate={{ required: { value: true }, maxLength: { value: 6, errorMessage: 'Max 6 chars.' } }} />\r\n                                            <AvField name=\"Min_Value\" label=\"Min Value : \" placeholder=\"Min 6 Chars\" min={6} type=\"number\" errorMessage=\"Min Value 6\" validate={{ required: { value: true }, min: { value: 6 } }} />\r\n                                            <AvField name=\"Max_Value\" label=\"Max Value : \" placeholder=\"max 5 Chars\" max={6} type=\"number\" errorMessage=\"Max Value 6\" validate={{ required: { value: true }, max: { value: 6 } }} />\r\n                                            <AvField name=\"Range_Value\" label=\"Range Length : \" placeholder=\"Text between 5 - 10 chars length\" type=\"number\" errorMessage=\"range between 5 to 10\" validate={{ required: { value: true } }} />\r\n                                            <AvField name=\"Regular_Exp\" label=\"Regular Exp : \" placeholder=\"Hex. Color\" type=\"number\" errorMessage=\"Hex Value\" validate={{ required: { value: true }, pattern: { value: '^[#0-9]+$', errorMessage: 'Only Hex Value' } }} />\r\n                                            <div className=\"form-group  m-b-0\">\r\n                                                <Button color=\"primary\">Submit</Button>  &nbsp;\r\n                                            <Button type=\"reset\">cancel</Button>\r\n                                            </div>\r\n                                        </AvForm>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, { activateAuthLayout })(FormValidation);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}