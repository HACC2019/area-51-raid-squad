{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anime\\\\Documents\\\\Githubrepositories\\\\area-51-raid-squad\\\\src\\\\containers\\\\charts\\\\apex\\\\apexbar.js\";\nimport React, { Component } from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { Button } from 'reactstrap';\n\nconst data = require('./../../../Data_HACC.json');\n\nclass Apexbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onEnergyPress = () => {\n      this.setState({\n        data_mode: 'energy'\n      });\n    };\n\n    this.onMoneyPress = () => {\n      this.setState({\n        data_mode: 'money'\n      });\n    };\n\n    this.state = {\n      data_mode: 'energy',\n      apexBarChartOpt: {\n        chart: {\n          type: 'bar',\n          foreColor: '#9f9ea4',\n          toolbar: {\n            show: false\n          }\n        },\n        plotOptions: {\n          bar: {\n            columnWidth: '70%',\n            endingShape: 'rounded'\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        grid: {\n          yaxis: {\n            lines: {\n              show: false\n            }\n          }\n        },\n        xaxis: {\n          labels: {\n            rotate: -90\n          },\n          categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        colors: ['#e74c5e'],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shade: 'dark',\n            type: \"vertical\",\n            shadeIntensity: 1,\n            gradientToColors: ['#4090cb'],\n            inverseColors: true,\n            opacityFrom: 0.85,\n            opacityTo: 0.85,\n            stops: [0, 100, 100, 100]\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    // Initialize data stores\n    let energy_manifold = [];\n    let moneyfold = [];\n    data.forEach(function (item) {\n      energy_manifold.push(item.energy);\n      moneyfold.push(parseFloat(item.amount.slice(1)));\n    });\n    let toshow = this.state.data_mode === 'energy' ? energy_manifold : moneyfold;\n    const apexBarChartData = [{\n      name: this.state.data_mode,\n      data: toshow.slice(50, 71)\n    }];\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn-group\",\n      \"data-toggle\": \"buttons\",\n      role: \"group\",\n      \"aria-label\": \"Data View\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.onEnergyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Energy\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.onMoneyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Revenue\"), ' '), React.createElement(ReactApexChart, {\n      options: this.state.apexBarChartOpt,\n      series: apexBarChartData,\n      width: \"100%\",\n      height: \"299\",\n      type: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Apexbar;","map":{"version":3,"sources":["C:/Users/Anime/Documents/Githubrepositories/area-51-raid-squad/src/containers/charts/apex/apexbar.js"],"names":["React","Component","ReactApexChart","Button","data","require","Apexbar","constructor","props","onEnergyPress","setState","data_mode","onMoneyPress","state","apexBarChartOpt","chart","type","foreColor","toolbar","show","plotOptions","bar","columnWidth","endingShape","dataLabels","enabled","grid","yaxis","lines","xaxis","labels","rotate","categories","colors","fill","gradient","shade","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","render","energy_manifold","moneyfold","forEach","item","push","energy","parseFloat","amount","slice","toshow","apexBarChartData","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst data = require('./../../../Data_HACC.json');\r\n\r\nclass Apexbar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data_mode: 'energy',\r\n            apexBarChartOpt: {\r\n                chart: {\r\n                    type: 'bar',\r\n                    foreColor: '#9f9ea4',\r\n                    toolbar: {\r\n                      show: false,\r\n                    }\r\n                  },\r\n                  plotOptions: {\r\n                    bar: {\r\n                      columnWidth: '70%',\r\n                      endingShape: 'rounded'\r\n                    }\r\n                  },\r\n                  dataLabels: {\r\n                    enabled: false\r\n                  },grid: {\r\n                    yaxis: {\r\n                      lines: {\r\n                        show: false,\r\n                      }\r\n                    }\r\n                  },\r\n                  xaxis: {\r\n                    labels: {\r\n                      rotate: -90\r\n                    },\r\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug','Sep', 'Oct', 'Nov', 'Dec'],\r\n                  },\r\n                  colors: ['#e74c5e'],\r\n                \r\n                  fill: {\r\n                    type: 'gradient',\r\n                    gradient: {\r\n                      shade: 'dark',\r\n                      type: \"vertical\",\r\n                      shadeIntensity: 1,\r\n                      gradientToColors: [ '#4090cb'],\r\n                      inverseColors: true,\r\n                      opacityFrom: 0.85,\r\n                      opacityTo: 0.85,\r\n                      stops: [0, 100, 100, 100]\r\n                    },\r\n                  },\r\n            }\r\n        }\r\n    }\r\n\r\n    onEnergyPress = () => {\r\n      this.setState({\r\n        data_mode: 'energy'\r\n      });\r\n    }\r\n\r\n    onMoneyPress = () => {\r\n      this.setState({\r\n        data_mode: 'money'\r\n      });\r\n    }\r\n\r\n    render() {\r\n\r\n        // Initialize data stores\r\n        let energy_manifold = [];\r\n        let moneyfold = [];\r\n\r\n        data.forEach(function(item) {\r\n          energy_manifold.push(item.energy);\r\n          moneyfold.push(parseFloat(item.amount.slice(1)));\r\n        })\r\n\r\n        let toshow = (this.state.data_mode === 'energy' ? energy_manifold : moneyfold);\r\n       \r\n\r\n        const apexBarChartData = [{\r\n            name: this.state.data_mode,\r\n            data: toshow.slice(50, 71),\r\n          }];\r\n\r\n        return (\r\n            <React.Fragment>\r\n              <div className=\"btn-group\" data-toggle=\"buttons\" role=\"group\" aria-label=\"Data View\">\r\n              <Button color=\"secondary\" onClick={this.onEnergyPress}>Energy</Button>{' '}\r\n              <Button color=\"secondary\" onClick={this.onMoneyPress}>Revenue</Button>{' '}\r\n              </div>\r\n\r\n\r\n                <ReactApexChart options={this.state.apexBarChartOpt} series={apexBarChartData}  width=\"100%\" height=\"299\"  type=\"bar\"  />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Apexbar;   "]},"metadata":{},"sourceType":"module"}