{"ast":null,"code":"/*!\n* metismenujs - v1.1.0\n* MetisMenu with Vanilla-JS\n* https://github.com/onokumus/metismenujs#readme\n*\n* Made by Osman Nuri Okumus <onokumus@gmail.com> (https://github.com/onokumus)\n* Under MIT License\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.MetisMenu = factory());\n})(this, function () {\n  'use strict';\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\n\n  var _assign = function __assign() {\n    _assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) {\n          if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n      }\n\n      return t;\n    };\n\n    return _assign.apply(this, arguments);\n  };\n\n  var Default = {\n    parentTrigger: \"li\",\n    subMenu: \"ul\",\n    toggle: true,\n    triggerElement: \"a\"\n  };\n  var ClassName = {\n    ACTIVE: \"mm-active\",\n    COLLAPSE: \"mm-collapse\",\n    COLLAPSED: \"mm-collapsed\",\n    COLLAPSING: \"mm-collapsing\",\n    METIS: \"metismenu\",\n    SHOW: \"mm-show\"\n  };\n\n  var MetisMenu =\n  /** @class */\n  function () {\n    /**\n     * Creates an instance of MetisMenu.\n     *\n     * @constructor\n     * @param {HTMLElement | string} element\n     * @param {IMMOptions} [options]\n     * @memberof MetisMenu\n     */\n    function MetisMenu(element, options) {\n      this.element = typeof element === \"string\" ? document.querySelector(element) : element;\n      this.cacheEl = this.element;\n      this.config = _assign({}, Default, options);\n      this.cacheConfig = this.config;\n      this.disposed = false;\n      this.ulArr = [];\n      this.listenerOb = [];\n      this.init();\n    }\n\n    MetisMenu.prototype.update = function () {\n      this.disposed = false;\n      this.element = this.cacheEl;\n      this.config = this.cacheConfig;\n      this.init();\n    };\n\n    MetisMenu.prototype.dispose = function () {\n      for (var _i = 0, _a = this.listenerOb; _i < _a.length; _i++) {\n        var lo = _a[_i];\n\n        for (var key in lo) {\n          if (lo.hasOwnProperty(key)) {\n            var el = lo[key];\n            el[1].removeEventListener(el[0], el[2]);\n          }\n        }\n      }\n\n      this.ulArr = [];\n      this.listenerOb = [];\n      this.config = null;\n      this.element = null;\n      this.disposed = true;\n    };\n\n    MetisMenu.prototype.on = function (event, fn) {\n      this.element.addEventListener(event, fn, false);\n      return this;\n    };\n\n    MetisMenu.prototype.off = function (event, fn) {\n      this.element.removeEventListener(event, fn);\n      return this;\n    };\n\n    MetisMenu.prototype.emit = function (event, eventDetail, shouldBubble) {\n      if (shouldBubble === void 0) {\n        shouldBubble = false;\n      }\n\n      var evt;\n\n      if (typeof CustomEvent === \"function\") {\n        evt = new CustomEvent(event, {\n          bubbles: shouldBubble,\n          detail: eventDetail\n        });\n      } else {\n        evt = document.createEvent(\"CustomEvent\");\n        evt.initCustomEvent(event, shouldBubble, false, eventDetail);\n      }\n\n      this.element.dispatchEvent(evt);\n      return this;\n    };\n\n    MetisMenu.prototype.init = function () {\n      this.element.classList.add(ClassName.METIS);\n      this.ulArr = [].slice.call(this.element.querySelectorAll(this.config.subMenu));\n\n      for (var _i = 0, _a = this.ulArr; _i < _a.length; _i++) {\n        var ul = _a[_i];\n        var li = ul.parentNode;\n        ul.classList.add(ClassName.COLLAPSE);\n\n        if (li.classList.contains(ClassName.ACTIVE)) {\n          this.show(ul);\n        } else {\n          this.hide(ul);\n        }\n\n        var a = li.querySelector(this.config.triggerElement);\n\n        if (a.getAttribute(\"aria-disabled\") === \"true\") {\n          return;\n        }\n\n        a.setAttribute(\"aria-expanded\", \"false\");\n        var listenerOb = {\n          aClick: [\"click\", a, this.clickEvent.bind(this)]\n        };\n\n        for (var key in listenerOb) {\n          if (listenerOb.hasOwnProperty(key)) {\n            var listener = listenerOb[key];\n            listener[1].addEventListener(listener[0], listener[2]);\n          }\n        }\n\n        this.listenerOb.push(listenerOb);\n      }\n    };\n\n    MetisMenu.prototype.clickEvent = function (ev) {\n      if (!this.disposed) {\n        if (ev.currentTarget.tagName === \"A\") {\n          ev.preventDefault();\n        }\n\n        var li = ev.currentTarget.parentNode;\n        var ul = li.querySelector(this.config.subMenu);\n        this.toggle(ul);\n      }\n    };\n\n    MetisMenu.prototype.toggle = function (ul) {\n      if (ul.parentNode.classList.contains(ClassName.ACTIVE)) {\n        this.hide(ul);\n      } else {\n        this.show(ul);\n      }\n    };\n\n    MetisMenu.prototype.show = function (ul) {\n      var _this = this;\n\n      if (this.isTransitioning || ul.classList.contains(ClassName.COLLAPSING)) {\n        return;\n      }\n\n      var complete = function complete() {\n        ul.classList.remove(ClassName.COLLAPSING);\n        ul.style.height = \"\";\n        ul.removeEventListener(\"transitionend\", complete);\n\n        _this.setTransitioning(false);\n\n        _this.emit(\"shown.metisMenu\", {\n          shownElement: ul\n        });\n      };\n\n      var li = ul.parentNode;\n      li.classList.add(ClassName.ACTIVE);\n      var a = li.querySelector(this.config.triggerElement);\n      a.setAttribute(\"aria-expanded\", \"true\");\n      a.classList.remove(ClassName.COLLAPSED);\n      ul.style.height = \"0px\";\n      ul.classList.remove(ClassName.COLLAPSE);\n      ul.classList.remove(ClassName.SHOW);\n      ul.classList.add(ClassName.COLLAPSING);\n      var eleParentSiblins = [].slice.call(li.parentNode.children).filter(function (c) {\n        return c !== li;\n      });\n\n      if (this.config.toggle && eleParentSiblins.length > 0) {\n        for (var _i = 0, eleParentSiblins_1 = eleParentSiblins; _i < eleParentSiblins_1.length; _i++) {\n          var sibli = eleParentSiblins_1[_i];\n          var sibUl = sibli.querySelector(this.config.subMenu);\n\n          if (sibUl !== null) {\n            this.hide(sibUl);\n          }\n        }\n      }\n\n      this.setTransitioning(true);\n      ul.classList.add(ClassName.COLLAPSE);\n      ul.classList.add(ClassName.SHOW);\n      ul.style.height = ul.scrollHeight + \"px\";\n      this.emit(\"show.metisMenu\", {\n        showElement: ul\n      });\n      ul.addEventListener(\"transitionend\", complete);\n    };\n\n    MetisMenu.prototype.hide = function (ul) {\n      var _this = this;\n\n      if (this.isTransitioning || !ul.classList.contains(ClassName.SHOW)) {\n        return;\n      }\n\n      this.emit(\"hide.metisMenu\", {\n        hideElement: ul\n      });\n      var li = ul.parentNode;\n      li.classList.remove(ClassName.ACTIVE);\n\n      var complete = function complete() {\n        ul.classList.remove(ClassName.COLLAPSING);\n        ul.classList.add(ClassName.COLLAPSE);\n        ul.style.height = \"\";\n        ul.removeEventListener(\"transitionend\", complete);\n\n        _this.setTransitioning(false);\n\n        _this.emit(\"hidden.metisMenu\", {\n          hiddenElement: ul\n        });\n      };\n\n      ul.style.height = ul.getBoundingClientRect().height + \"px\";\n      ul.style.height = ul.offsetHeight + \"px\";\n      ul.classList.add(ClassName.COLLAPSING);\n      ul.classList.remove(ClassName.COLLAPSE);\n      ul.classList.remove(ClassName.SHOW);\n      this.setTransitioning(true);\n      ul.addEventListener(\"transitionend\", complete);\n      ul.style.height = \"0px\";\n      var a = li.querySelector(this.config.triggerElement);\n      a.setAttribute(\"aria-expanded\", \"false\");\n      a.classList.add(ClassName.COLLAPSED);\n    };\n\n    MetisMenu.prototype.setTransitioning = function (isTransitioning) {\n      this.isTransitioning = isTransitioning;\n    };\n\n    return MetisMenu;\n  }();\n\n  return MetisMenu;\n});","map":null,"metadata":{},"sourceType":"script"}