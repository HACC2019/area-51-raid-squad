{"ast":null,"code":"import { takeEvery, fork, put, all, call } from 'redux-saga/effects'; // Login Redux States\n\nimport { FORGET_USER } from './actionTypes';\nimport { apiError } from './actions'; // AUTH related methods\n\nimport { postForgetPwd } from '../../../helpers/authUtils'; //If user is login then dispatch redux action's are directly from here.\n\nfunction* forgetUser({\n  payload: {\n    username,\n    history\n  }\n}) {\n  try {\n    console.log(\"In saga...\" + username);\n    const response = yield call(postForgetPwd, '/forget-pwd', {\n      email: username\n    });\n    if (response) history.push('/reset-password');\n  } catch (error) {\n    yield put(apiError(error));\n  }\n}\n\nexport function* watchUserForget() {\n  yield takeEvery(FORGET_USER, forgetUser);\n}\n\nfunction* forgetSaga() {\n  yield all([fork(watchUserForget)]);\n}\n\nexport default forgetSaga;","map":{"version":3,"sources":["C:/Users/Anime/Documents/Githubrepositories/area-51-raid-squad/src/store/auth/forgetpwd/saga.js"],"names":["takeEvery","fork","put","all","call","FORGET_USER","apiError","postForgetPwd","forgetUser","payload","username","history","console","log","response","email","push","error","watchUserForget","forgetSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,QAAgD,oBAAhD,C,CAEA;;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,QAAT,QAAyB,WAAzB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,4BAA9B,C,CAEA;;AACA,UAAUC,UAAV,CAAqB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAAX,CAArB,EAAyD;AACjD,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAaH,QAAzB;AACA,UAAMI,QAAQ,GAAG,MAAMV,IAAI,CAACG,aAAD,EAAgB,aAAhB,EAA+B;AAACQ,MAAAA,KAAK,EAAEL;AAAR,KAA/B,CAA3B;AACA,QAAGI,QAAH,EACGH,OAAO,CAACK,IAAR,CAAa,iBAAb;AACN,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMf,GAAG,CAACI,QAAQ,CAACW,KAAD,CAAT,CAAT;AACH;AACR;;AAED,OAAO,UAAUC,eAAV,GAA4B;AAC/B,QAAMlB,SAAS,CAACK,WAAD,EAAcG,UAAd,CAAf;AACH;;AAED,UAAUW,UAAV,GAAuB;AACnB,QAAMhB,GAAG,CAAC,CAACF,IAAI,CAACiB,eAAD,CAAL,CAAD,CAAT;AACH;;AAED,eAAeC,UAAf","sourcesContent":["import { takeEvery, fork, put, all, call } from 'redux-saga/effects';\r\n\r\n// Login Redux States\r\nimport { FORGET_USER } from './actionTypes';\r\nimport { apiError } from './actions';\r\n\r\n// AUTH related methods\r\nimport { postForgetPwd } from '../../../helpers/authUtils';\r\n\r\n//If user is login then dispatch redux action's are directly from here.\r\nfunction* forgetUser({ payload: { username, history } }) {\r\n        try {\r\n            console.log(\"In saga...\"+username);\r\n            const response = yield call(postForgetPwd, '/forget-pwd', {email: username});\r\n            if(response)\r\n               history.push('/reset-password');\r\n        } catch (error) {\r\n            yield put(apiError(error));\r\n        }\r\n}\r\n\r\nexport function* watchUserForget() {\r\n    yield takeEvery(FORGET_USER, forgetUser)\r\n}\r\n\r\nfunction* forgetSaga() {\r\n    yield all([fork(watchUserForget)]);\r\n}\r\n\r\nexport default forgetSaga;"]},"metadata":{},"sourceType":"module"}