{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/* eslint react/prop-types: 0 */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _const = require('./const');\n\nvar _context = require('./context');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = function (Component, selectRowEnabled) {\n  var renderWithCellEdit = function renderWithCellEdit(props, cellEdit) {\n    var key = props.value;\n    var editableRow = !(cellEdit.nonEditableRows.length > 0 && cellEdit.nonEditableRows.indexOf(key) > -1);\n    var attrs = {};\n\n    if (selectRowEnabled && cellEdit.mode === _const.DBCLICK_TO_CELL_EDIT) {\n      attrs.DELAY_FOR_DBCLICK = _const.DELAY_FOR_DBCLICK;\n    }\n\n    return _react2.default.createElement(Component, _extends({}, props, attrs, {\n      editingRowIdx: cellEdit.ridx,\n      editingColIdx: cellEdit.cidx,\n      editable: editableRow,\n      onStart: cellEdit.onStart,\n      clickToEdit: cellEdit.mode === _const.CLICK_TO_CELL_EDIT,\n      dbclickToEdit: cellEdit.mode === _const.DBCLICK_TO_CELL_EDIT\n    }));\n  };\n\n  function withConsumer(props) {\n    return _react2.default.createElement(_context.Consumer, null, function (cellEdit) {\n      return renderWithCellEdit(props, cellEdit);\n    });\n  }\n\n  withConsumer.displayName = 'WithCellEditingRowConsumer';\n  return withConsumer;\n};","map":null,"metadata":{},"sourceType":"script"}