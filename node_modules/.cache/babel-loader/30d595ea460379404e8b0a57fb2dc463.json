{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _reactstrap = require('reactstrap');\n\nvar _AvInput = require('./AvInput');\n\nvar _AvInput2 = _interopRequireDefault(_AvInput);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar radioPropTypes = (0, _assign2.default)({}, _AvInput2.default.propTypes, {\n  customInput: _propTypes2.default.bool\n});\ndelete radioPropTypes.name;\n\nvar AvRadio = function (_Component) {\n  (0, _inherits3.default)(AvRadio, _Component);\n\n  function AvRadio() {\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, AvRadio);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  AvRadio.prototype.componentDidMount = function componentDidMount() {\n    this.context.FormCtrl && this.context.FormCtrl.register(this);\n  };\n\n  AvRadio.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.context.FormCtrl && this.context.FormCtrl.unregister(this);\n  };\n\n  AvRadio.prototype.render = function render() {\n    var _props = this.props,\n        className = _props.className,\n        id = _props.id,\n        customInput = _props.customInput,\n        attributes = (0, _objectWithoutProperties3.default)(_props, ['className', 'id', 'customInput']);\n    var groupProps = this.context.Group.getProps();\n    var touched = this.context.FormCtrl.isTouched(groupProps.name);\n    var hasError = this.context.FormCtrl.hasError(groupProps.name);\n    var classes = (0, _classnames2.default)(className, touched ? 'is-touched' : 'is-untouched', this.context.FormCtrl.isDirty(groupProps.name) ? 'is-dirty' : 'is-pristine', this.context.FormCtrl.isBad(groupProps.name) ? 'is-bad-input' : null, hasError ? 'av-invalid' : 'av-valid', touched && hasError && 'is-invalid');\n\n    if (this.props.disabled === undefined && this.context.FormCtrl.isDisabled() !== undefined) {\n      attributes.disabled = this.context.FormCtrl.isDisabled();\n    }\n\n    if (this.props.readOnly === undefined && this.context.FormCtrl.isReadOnly() !== undefined) {\n      attributes.disabled = attributes.disabled || this.context.FormCtrl.isReadOnly();\n    }\n\n    if (customInput) {\n      return _react2.default.createElement(_reactstrap.CustomInput, (0, _extends3.default)({\n        name: groupProps.name,\n        type: 'radio'\n      }, attributes, {\n        inline: groupProps.inline,\n        id: id || 'radio-' + groupProps.name + '-' + this.props.value,\n        className: classes,\n        onChange: this.onChangeHandler,\n        checked: this.props.value === groupProps.value,\n        value: this.props.value && this.props.value.toString(),\n        required: groupProps.required,\n        label: this.props.label\n      }));\n    }\n\n    return _react2.default.createElement(_reactstrap.FormGroup, {\n      check: true,\n      inline: groupProps.inline,\n      disabled: attributes.disabled || attributes.readOnly\n    }, _react2.default.createElement(_reactstrap.Input, (0, _extends3.default)({\n      name: groupProps.name,\n      type: 'radio'\n    }, attributes, {\n      id: id || 'radio-' + groupProps.name + '-' + this.props.value,\n      className: classes,\n      onChange: this.onChangeHandler,\n      checked: this.props.value === groupProps.value,\n      value: this.props.value && this.props.value.toString(),\n      required: groupProps.required\n    })), _react2.default.createElement(_reactstrap.Label, {\n      check: true,\n      'for': id || 'radio-' + groupProps.name + '-' + this.props.value\n    }, this.props.label));\n  };\n\n  return AvRadio;\n}(_react.Component);\n\nAvRadio.contextTypes = (0, _assign2.default)({}, _AvInput2.default.contextTypes, {\n  Group: _propTypes2.default.object.isRequired\n});\nAvRadio.propTypes = radioPropTypes;\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.onChangeHandler = function (event) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    _this2.context.Group.update(event, _this2.props.value);\n\n    if (_this2.props.onChange) {\n      var _props2;\n\n      (_props2 = _this2.props).onChange.apply(_props2, [event].concat(args));\n    }\n  };\n};\n\nexports.default = AvRadio;","map":null,"metadata":{},"sourceType":"script"}