{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint no-return-assign: 0 */\n\n\nvar CheckBoxEditor = function (_Component) {\n  _inherits(CheckBoxEditor, _Component);\n\n  function CheckBoxEditor(props) {\n    _classCallCheck(this, CheckBoxEditor);\n\n    var _this = _possibleConstructorReturn(this, (CheckBoxEditor.__proto__ || Object.getPrototypeOf(CheckBoxEditor)).call(this, props));\n\n    _this.state = {\n      checked: props.defaultValue.toString() === props.value.split(':')[0]\n    };\n    _this.handleChange = _this.handleChange.bind(_this);\n    return _this;\n  }\n\n  _createClass(CheckBoxEditor, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var didMount = this.props.didMount;\n      this.checkbox.focus();\n      if (didMount) didMount();\n    }\n  }, {\n    key: 'getValue',\n    value: function getValue() {\n      var _props$value$split = this.props.value.split(':'),\n          _props$value$split2 = _slicedToArray(_props$value$split, 2),\n          positive = _props$value$split2[0],\n          negative = _props$value$split2[1];\n\n      return this.checkbox.checked ? positive : negative;\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(e) {\n      if (this.props.onChange) this.props.onChange(e);\n      var target = e.target;\n      this.setState(function () {\n        return {\n          checked: target.checked\n        };\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          defaultValue = _props.defaultValue,\n          didMount = _props.didMount,\n          className = _props.className,\n          rest = _objectWithoutProperties(_props, ['defaultValue', 'didMount', 'className']);\n\n      var editorClass = (0, _classnames2.default)('editor edit-chseckbox checkbox', className);\n      return _react2.default.createElement('input', _extends({\n        ref: function ref(node) {\n          return _this2.checkbox = node;\n        },\n        type: 'checkbox',\n        className: editorClass\n      }, rest, {\n        checked: this.state.checked,\n        onChange: this.handleChange\n      }));\n    }\n  }]);\n\n  return CheckBoxEditor;\n}(_react.Component);\n\nCheckBoxEditor.propTypes = {\n  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n  value: _propTypes2.default.string,\n  defaultValue: _propTypes2.default.any,\n  onChange: _propTypes2.default.func,\n  didMount: _propTypes2.default.func\n};\nCheckBoxEditor.defaultProps = {\n  className: '',\n  value: 'on:off',\n  defaultValue: false,\n  onChange: undefined,\n  didMount: undefined\n};\nexports.default = CheckBoxEditor;","map":null,"metadata":{},"sourceType":"script"}