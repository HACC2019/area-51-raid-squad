{"ast":null,"code":"import { takeEvery, fork, put, all, call } from 'redux-saga/effects'; // Login Redux States\n\nimport { CHECK_LOGIN } from './actionTypes';\nimport { apiLoginError, loginUserSuccessful } from './actions'; // AUTH related methods\n\nimport { setLoggeedInUser, postLogin } from '../../../helpers/authUtils'; //If user is login then dispatch redux action's are directly from here.\n\nfunction* loginUser({\n  payload: {\n    username,\n    password,\n    history\n  }\n}) {\n  try {\n    const response = yield call(postLogin, '/post-login', {\n      username: username,\n      password: password\n    });\n    setLoggeedInUser(response);\n    yield put(loginUserSuccessful(response));\n    history.push('/dashboard');\n  } catch (error) {\n    yield put(apiLoginError(error));\n  }\n}\n\nexport function* watchUserLogin() {\n  yield takeEvery(CHECK_LOGIN, loginUser);\n}\n\nfunction* loginSaga() {\n  yield all([fork(watchUserLogin)]);\n}\n\nexport default loginSaga;","map":{"version":3,"sources":["C:/Users/Anime/Documents/Githubrepositories/area-51-raid-squad/src/store/auth/login/saga.js"],"names":["takeEvery","fork","put","all","call","CHECK_LOGIN","apiLoginError","loginUserSuccessful","setLoggeedInUser","postLogin","loginUser","payload","username","password","history","response","push","error","watchUserLogin","loginSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,QAAgD,oBAAhD,C,CAEA;;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAAUC,aAAV,EAAyBC,mBAAzB,QAAoD,WAApD,C,CAEA;;AACA,SAASC,gBAAT,EAA0BC,SAA1B,QAA2C,4BAA3C,C,CAEA;;AACA,UAAUC,SAAV,CAAoB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB;AAAX,CAApB,EAAkE;AAC1D,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMX,IAAI,CAACK,SAAD,EAAY,aAAZ,EAA2B;AAACG,MAAAA,QAAQ,EAAEA,QAAX;AAAqBC,MAAAA,QAAQ,EAAEA;AAA/B,KAA3B,CAA3B;AACCL,IAAAA,gBAAgB,CAACO,QAAD,CAAhB;AACA,UAAMb,GAAG,CAACK,mBAAmB,CAACQ,QAAD,CAApB,CAAT;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,YAAb;AACJ,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMf,GAAG,CAACI,aAAa,CAACW,KAAD,CAAd,CAAT;AACH;AACR;;AAED,OAAO,UAAUC,cAAV,GAA2B;AAC9B,QAAMlB,SAAS,CAACK,WAAD,EAAcK,SAAd,CAAf;AACH;;AAED,UAAUS,SAAV,GAAsB;AAClB,QAAMhB,GAAG,CAAC,CAACF,IAAI,CAACiB,cAAD,CAAL,CAAD,CAAT;AACH;;AAED,eAAeC,SAAf","sourcesContent":["import { takeEvery, fork, put, all, call } from 'redux-saga/effects';\r\n\r\n// Login Redux States\r\nimport { CHECK_LOGIN } from './actionTypes';\r\nimport {  apiLoginError, loginUserSuccessful } from './actions';\r\n\r\n// AUTH related methods\r\nimport { setLoggeedInUser,postLogin } from '../../../helpers/authUtils';\r\n\r\n//If user is login then dispatch redux action's are directly from here.\r\nfunction* loginUser({ payload: { username, password, history } }) {\r\n        try {\r\n            const response = yield call(postLogin, '/post-login', {username: username, password: password});\r\n             setLoggeedInUser(response);\r\n             yield put(loginUserSuccessful(response));\r\n             history.push('/dashboard');\r\n        } catch (error) {\r\n            yield put(apiLoginError(error));\r\n        }\r\n}\r\n\r\nexport function* watchUserLogin() {\r\n    yield takeEvery(CHECK_LOGIN, loginUser)\r\n}\r\n\r\nfunction* loginSaga() {\r\n    yield all([fork(watchUserLogin)]);\r\n}\r\n\r\nexport default loginSaga;"]},"metadata":{},"sourceType":"module"}