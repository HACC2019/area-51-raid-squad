{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Anime\\\\Documents\\\\Githubrepositories\\\\area-51-raid-squad\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { CHECK_LOGIN, LOGIN_USER_SUCCESSFUL, APILOGIN_FAILED, CHECK_OTP, ERROR_CLEAR, VALIDATE_OTP_SUCCESS, VALIDATE_OTP_ERROR } from './actionTypes';\nconst initialState = {\n  loginError: null,\n  message: null,\n  loading: null\n};\n\nconst login = (state = initialState, action) => {\n  switch (action.type) {\n    case CHECK_LOGIN:\n      state = _objectSpread({}, state, {\n        user: null,\n        loading: true,\n        loginError: null\n      });\n      break;\n\n    case LOGIN_USER_SUCCESSFUL:\n      state = _objectSpread({}, state, {\n        user: action.payload,\n        loading: false,\n        loginError: null\n      });\n      break;\n\n    case APILOGIN_FAILED:\n      state = _objectSpread({}, state, {\n        loading: false,\n        loginError: action.payload\n      });\n      break;\n\n    case CHECK_OTP:\n      state = _objectSpread({}, state, {\n        user: null,\n        validate_otp_success: false,\n        validate_otp_error: false\n      });\n      break;\n\n    case VALIDATE_OTP_SUCCESS:\n      state = _objectSpread({}, state, {\n        validate_otp_success: action.payload,\n        validate_otp_error: false\n      });\n      break;\n\n    case VALIDATE_OTP_ERROR:\n      state = _objectSpread({}, state, {\n        validate_otp_success: false,\n        validate_otp_error: action.payload\n      });\n      break;\n\n    case ERROR_CLEAR:\n      state = _objectSpread({}, state, {\n        loginError: null,\n        user: null\n      });\n      break;\n\n    default:\n      state = _objectSpread({}, state);\n      break;\n  }\n\n  return state;\n};\n\nexport default login;","map":{"version":3,"sources":["C:/Users/Anime/Documents/Githubrepositories/area-51-raid-squad/src/store/auth/login/reducer.js"],"names":["CHECK_LOGIN","LOGIN_USER_SUCCESSFUL","APILOGIN_FAILED","CHECK_OTP","ERROR_CLEAR","VALIDATE_OTP_SUCCESS","VALIDATE_OTP_ERROR","initialState","loginError","message","loading","login","state","action","type","user","payload","validate_otp_success","validate_otp_error"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,qBAAtB,EAA6CC,eAA7C,EAA8DC,SAA9D,EAAwEC,WAAxE,EAAqFC,oBAArF,EAA2GC,kBAA3G,QAAqI,eAArI;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,IADK;AACCC,EAAAA,OAAO,EAAE,IADV;AACgBC,EAAAA,OAAO,EAAE;AADzB,CAArB;;AAIA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,WAAL;AACIY,MAAAA,KAAK,qBACEA,KADF;AAEDG,QAAAA,IAAI,EAAE,IAFL;AAGDL,QAAAA,OAAO,EAAE,IAHR;AAIDF,QAAAA,UAAU,EAAE;AAJX,QAAL;AAMA;;AACJ,SAAKP,qBAAL;AACIW,MAAAA,KAAK,qBACEA,KADF;AAEDG,QAAAA,IAAI,EAAEF,MAAM,CAACG,OAFZ;AAGDN,QAAAA,OAAO,EAAE,KAHR;AAIDF,QAAAA,UAAU,EAAE;AAJX,QAAL;AAMA;;AACJ,SAAKN,eAAL;AACIU,MAAAA,KAAK,qBACEA,KADF;AAEDF,QAAAA,OAAO,EAAE,KAFR;AAGDF,QAAAA,UAAU,EAAEK,MAAM,CAACG;AAHlB,QAAL;AAKA;;AAEJ,SAAKb,SAAL;AACIS,MAAAA,KAAK,qBACEA,KADF;AAEDG,QAAAA,IAAI,EAAE,IAFL;AAGDE,QAAAA,oBAAoB,EAAE,KAHrB;AAIDC,QAAAA,kBAAkB,EAAE;AAJnB,QAAL;AAMA;;AAEJ,SAAKb,oBAAL;AACIO,MAAAA,KAAK,qBACEA,KADF;AAEDK,QAAAA,oBAAoB,EAAEJ,MAAM,CAACG,OAF5B;AAGDE,QAAAA,kBAAkB,EAAE;AAHnB,QAAL;AAKA;;AAEJ,SAAKZ,kBAAL;AACIM,MAAAA,KAAK,qBACEA,KADF;AAEDK,QAAAA,oBAAoB,EAAE,KAFrB;AAGDC,QAAAA,kBAAkB,EAAEL,MAAM,CAACG;AAH1B,QAAL;AAKA;;AACA,SAAKZ,WAAL;AACIQ,MAAAA,KAAK,qBACEA,KADF;AAEDJ,QAAAA,UAAU,EAAE,IAFX;AAGDO,QAAAA,IAAI,EAAE;AAHL,QAAL;AAKA;;AACR;AACIH,MAAAA,KAAK,qBAAQA,KAAR,CAAL;AACA;AA1DR;;AA4DA,SAAOA,KAAP;AACH,CA9DD;;AAgEA,eAAeD,KAAf","sourcesContent":["import { CHECK_LOGIN, LOGIN_USER_SUCCESSFUL, APILOGIN_FAILED, CHECK_OTP,ERROR_CLEAR, VALIDATE_OTP_SUCCESS, VALIDATE_OTP_ERROR } from './actionTypes';\r\n\r\nconst initialState = {\r\n    loginError: null, message: null, loading: null\r\n}\r\n\r\nconst login = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHECK_LOGIN:\r\n            state = {\r\n                ...state,\r\n                user: null,\r\n                loading: true,\r\n                loginError: null\r\n            }\r\n            break;\r\n        case LOGIN_USER_SUCCESSFUL:\r\n            state = {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false,\r\n                loginError: null\r\n            }\r\n            break;\r\n        case APILOGIN_FAILED:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                loginError: action.payload\r\n            }\r\n            break;\r\n\r\n        case CHECK_OTP:\r\n            state = {\r\n                ...state,\r\n                user: null,\r\n                validate_otp_success: false,\r\n                validate_otp_error: false,\r\n            }\r\n            break;\r\n\r\n        case VALIDATE_OTP_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                validate_otp_success: action.payload,\r\n                validate_otp_error: false,\r\n            }\r\n            break;\r\n\r\n        case VALIDATE_OTP_ERROR:\r\n            state = {\r\n                ...state,\r\n                validate_otp_success: false,\r\n                validate_otp_error: action.payload,\r\n            }\r\n            break;\r\n            case ERROR_CLEAR:\r\n                state = {\r\n                    ...state,\r\n                    loginError: null,\r\n                    user: null,\r\n                }\r\n                break;\r\n        default:\r\n            state = { ...state };\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default login;"]},"metadata":{},"sourceType":"module"}