{"ast":null,"code":"/*!\nFullCalendar Bootstrap Plugin v4.3.0\nDocs & License: https://fullcalendar.io/\n(c) 2019 Adam Shaw\n*/\nimport { createPlugin, Theme } from '@fullcalendar/core';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar BootstrapTheme =\n/** @class */\nfunction (_super) {\n  __extends(BootstrapTheme, _super);\n\n  function BootstrapTheme() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return BootstrapTheme;\n}(Theme);\n\nBootstrapTheme.prototype.classes = {\n  widget: 'fc-bootstrap',\n  tableGrid: 'table-bordered',\n  tableList: 'table',\n  tableListHeading: 'table-active',\n  buttonGroup: 'btn-group',\n  button: 'btn btn-primary',\n  buttonActive: 'active',\n  today: 'alert alert-info',\n  popover: 'card card-primary',\n  popoverHeader: 'card-header',\n  popoverContent: 'card-body',\n  // day grid\n  // for left/right border color when border is inset from edges (all-day in timeGrid view)\n  // avoid `table` class b/c don't want margins/padding/structure. only border color.\n  headerRow: 'table-bordered',\n  dayRow: 'table-bordered',\n  // list view\n  listView: 'card card-primary'\n};\nBootstrapTheme.prototype.baseIconClass = 'fa';\nBootstrapTheme.prototype.iconClasses = {\n  close: 'fa-times',\n  prev: 'fa-chevron-left',\n  next: 'fa-chevron-right',\n  prevYear: 'fa-angle-double-left',\n  nextYear: 'fa-angle-double-right'\n};\nBootstrapTheme.prototype.iconOverrideOption = 'bootstrapFontAwesome';\nBootstrapTheme.prototype.iconOverrideCustomButtonOption = 'bootstrapFontAwesome';\nBootstrapTheme.prototype.iconOverridePrefix = 'fa-';\nvar main = createPlugin({\n  themeClasses: {\n    bootstrap: BootstrapTheme\n  }\n});\nexport default main;\nexport { BootstrapTheme };","map":null,"metadata":{},"sourceType":"module"}